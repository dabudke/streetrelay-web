// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  token String @id @default(cuid()) @map("_id")

  user   User   @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID String

  name   String
  device String
  ip     String

  lastSeen DateTime
  expires  DateTime

  @@map("sessions")
}

model Console {
  id            String   @id @default(cuid()) @map("_id")
  deviceName    String?
  user          User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID        String
  tokenIssuedAt DateTime @default(now())

  @@map("consoles")
}

model EmailVerification {
  token   String   @id @map("_id")
  emailId String
  email   String
  expires DateTime
  user    User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId  String   @unique

  @@map("emailVerifications")
}

model User {
  id                String             @id @map("_id")
  email             String?
  emailVerification EmailVerification?
  password          String
  sessions          Session[]
  console           Console[]

  nickname String?
  mii      Bytes?

  starCount    Int      @default(0)
  starredBy    User[]   @relation("StarredUsers", fields: [starredByIds], references: [id])
  starredByIds String[]

  stars   User[]   @relation("StarredUsers", fields: [starIds], references: [id])
  starIds String[]

  inboundTags  Tag[] @relation("InboundTag")
  outboundTags Tag[] @relation("OutboundTag")

  tags Int @default(0)

  games GameData[]

  @@map("users")
}

model Tag {
  id String @id @default(cuid()) @map("_id")

  user   User   @relation("InboundTag", fields: [userId], references: [id], onDelete: Cascade)
  userId String

  target   User   @relation("OutboundTag", fields: [targetId], references: [id], onDelete: Cascade)
  targetId String

  @@map("tags")
}

model GameData {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  game   Game   @relation(fields: [gameId], references: [id])
  gameId String

  data Bytes

  @@map("data")
}

model Game {
  id    String     @id @map("_id")
  title String
  icon  String     @default("https://via.placeholder.com/48.png")
  data  GameData[]

  @@map("games")
}
